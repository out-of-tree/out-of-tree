name: Ubuntu

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - ".github/workflows/images-*"
      - ".github/workflows/debian-cache.yml"
      - ".github/workflows/e2e.yml"
      - "docs/**"
      - "README.md"
  pull_request:

concurrency:
  group: ${{ github.workflow_ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Build
      run: go build

  test-unit:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies for tests
      run: |
        sudo apt-get update
        sudo apt-get install qemu-system-x86

    - name: Bootstrap
      run: ./tools/qemu-ubuntu-img/bootstrap.sh

    - name: Unit Testing
      run: |
        mkdir ~/.out-of-tree
        go test -parallel 1 -v ./...

  test-end-to-end-examples:
    name: Examples
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        example: [
          { dir: "kernel-module", params: "" },
          { dir: "kernel-exploit", params: "--threshold=0" },
          { dir: "script", params: "" },
          { dir: "preload", params: "" }
          ]

    steps:
    - uses: actions/checkout@v1

    - name: Setup
      run: .github/workflows/scripts/setup.sh

    - name: Build
      run: go build

    - name: Install dependencies for tests
      run: |
        sudo apt-get update
        sudo apt-get install qemu-system-x86

    - name: End-to-End Testing [${{ matrix.example.dir }}]
      run: |
        cd examples/${{ matrix.example.dir }}
        ../../out-of-tree --log-level=debug kernel autogen --max=1
        ../../out-of-tree --log-level=debug pew --qemu-timeout=10m ${{ matrix.example.params }}

    - name: Archive logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-end-to-end-examples-${{ matrix.example.dir }}-logs
        path: ~/.out-of-tree/logs

  test-end-to-end:
    name: E2E
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        #type: [ Script, Module ]
        type: [ Module ]
        os: [
          { distro: Ubuntu, release: 12.04 },
          { distro: Ubuntu, release: 14.04 },
          { distro: Ubuntu, release: 16.04 },
          { distro: Ubuntu, release: 18.04 },
          { distro: Ubuntu, release: 20.04 },
          { distro: Ubuntu, release: 22.04 },
          { distro: CentOS, release: 6 },
          { distro: CentOS, release: 7 },
          { distro: CentOS, release: 8 },
          { distro: OracleLinux, release: 6 },
          { distro: OracleLinux, release: 7 },
          { distro: OracleLinux, release: 8 },
          { distro: OracleLinux, release: 9 },
          { distro: Debian, release: 7 },
          { distro: Debian, release: 8 },
          { distro: Debian, release: 9 },
          { distro: Debian, release: 10 },
          { distro: Debian, release: 11 }
          ]

    steps:
    - uses: actions/checkout@v1

    - name: Setup
      run: .github/workflows/scripts/setup.sh

    - name: Build
      run: go build

    - name: Install dependencies for tests
      run: |
        sudo apt-get update
        sudo apt-get install qemu-system-x86

    - name: End-to-End Testing ${{ matrix.type }} [${{ matrix.os.distro }} ${{ matrix.os.release }}]
      shell: bash
      run: |
        mkdir test
        cd test

        echo 'name = "test"' >> .out-of-tree.toml
        echo 'type = "${{ matrix.type }}"' >> .out-of-tree.toml
        echo 'script = "script.sh"' >> .out-of-tree.toml
        echo '[[supported_kernels]]' >> .out-of-tree.toml
        echo 'distro_type = "${{ matrix.os.distro }}"' >> .out-of-tree.toml
        echo 'distro_release = "${{ matrix.os.release }}"' >> .out-of-tree.toml
        echo 'release_mask = ".*"' >> .out-of-tree.toml

        echo -e '#!/bin/sh\necho ok' >> script.sh

        cp ../examples/kernel-module/{module.c,Makefile,test.sh} .

        ../out-of-tree --log-level=debug kernel list-remote --distro=${{ matrix.os.distro }} --ver=${{ matrix.os.release }}
        ../out-of-tree --log-level=debug kernel autogen --max=1 --shuffle
        ../out-of-tree --log-level=debug pew --qemu-timeout=10m

    - name: Archive logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-end-to-end-${{ matrix.type }}-${{ matrix.os.distro }}-${{ matrix.os.release }}-logs
        path: ~/.out-of-tree/logs
